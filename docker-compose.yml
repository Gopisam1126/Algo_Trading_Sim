version: '3.8'

services:
  trading-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trading-api
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      # Optional: Mount CSV file for easy updates without rebuilding
      - ./infy_2min_60days.csv:/app/infy_2min_60days.csv:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - trading-network
    command: ["./trading-api"]

  technical-indicators-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: technical-indicators-api
    ports:
      - "5000:5000"
    depends_on:
      - trading-api
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      # Mount the technical indicators scripts for easy updates
      - ./technical_indicators.py:/app/technical_indicators.py:ro
      - ./technical_indicators_api.py:/app/technical_indicators_api.py:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - trading-network
    command: ["python3", "technical_indicators_api.py"]

  rsi-client:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trading-rsi-client
    depends_on:
      - trading-api
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      # Mount the RSI script for easy updates
      - ./test_RSI.py:/app/test_RSI.py:ro
    restart: unless-stopped
    networks:
      - trading-network
    command: ["python3", "test_RSI.py"]

  macd-client:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trading-macd-client
    depends_on:
      - trading-api
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      # Mount the MACD script for easy updates
      - ./test_MACD.py:/app/test_MACD.py:ro
    restart: unless-stopped
    networks:
      - trading-network
    command: ["python3", "test_MACD.py"]

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: trading-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # Optional: for SSL certificates
    depends_on:
      - trading-api
      - technical-indicators-api
    restart: unless-stopped
    networks:
      - trading-network
    profiles:
      - production

networks:
  trading-network:
    driver: bridge

volumes:
  trading-data:
    driver: local